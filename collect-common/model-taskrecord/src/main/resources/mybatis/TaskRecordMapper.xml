<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.common.collect.model.taskrecord.infrastructure.TaskRecordMapper">

    <sql id="tb">
        `task_record`
    </sql>

    <sql id="cols_all">
        `id`,
        `biz_type`,
        `biz_id`,
        `body`,
        `extra`,
        `try_times`,
        `max_try_times`,
        `state`,
        `alert_type`,
        `alert_target`,
        `first_error_message`,
        `last_error_message`,
        `create_at`,
        `update_at`
    </sql>

    <sql id="vals_all">
        #{item.id},
        #{item.bizType},
        #{item.bizId},
        #{item.body},
        #{item.extra},
        #{item.tryTimes},
        #{item.maxTryTimes},
        #{item.state},
        #{item.alertType},
        #{item.alertTarget},
        #{item.firstErrorMessage},
        #{item.lastErrorMessage},
        <if test="item.createAt != null ">#{item.createAt},</if>
        <if test="item.createAt == null ">now(),</if>
        <if test="item.updateAt != null ">#{item.updateAt}</if>
        <if test="item.updateAt == null ">now()</if>
    </sql>

    <sql id="set_dynamic">
        <if test="item.id !=null">`id` = #{item.id},</if>
        <if test="item.bizType !=null">`biz_type` = #{item.bizType},</if>
        <if test="item.bizId !=null">`biz_id` = #{item.bizId},</if>
        <if test="item.body !=null">`body` = #{item.body},</if>
        <if test="item.extra !=null">`extra` = #{item.extra},</if>
        <if test="item.tryTimes !=null">`try_times` = #{item.tryTimes},</if>
        <if test="item.maxTryTimes !=null">`max_try_times` = #{item.maxTryTimes},</if>
        <if test="item.state !=null">`state` = #{item.state},</if>
        <if test="item.alertType !=null">`alert_type` = #{item.alertType},</if>
        <if test="item.alertTarget !=null">`alert_target` = #{item.alertTarget},</if>
        <if test="item.firstErrorMessage !=null">`first_error_message` = #{item.firstErrorMessage},</if>
        <if test="item.lastErrorMessage !=null">`last_error_message` = #{item.lastErrorMessage},</if>
        <if test="item.createAt !=null">`create_at` = #{item.createAt},</if>
        <if test="item.updateAt !=null">`update_at` = #{item.updateAt},</if>
    </sql>

    <insert id="create" parameterType="com.common.collect.model.taskrecord.infrastructure.TaskRecord" keyProperty="item.id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="cols_all"/>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="vals_all"/>
        </trim>
    </insert>

    <insert id="creates">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_all"/>)
        VALUES
        <foreach collection="items" item="item" index="index" separator=",">
            (<include refid="vals_all"/>)
        </foreach>
    </insert>

    <select id="load" parameterType="long" resultType="com.common.collect.model.taskrecord.infrastructure.TaskRecord">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="loads" resultType="com.common.collect.model.taskrecord.infrastructure.TaskRecord" parameterType="list">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="com.common.collect.model.taskrecord.infrastructure.TaskRecord">
        UPDATE
        <include refid="tb"/>
        <set>
            <include refid="set_dynamic"/>
        </set>
        WHERE id=#{item.id}
    </update>

</mapper>
