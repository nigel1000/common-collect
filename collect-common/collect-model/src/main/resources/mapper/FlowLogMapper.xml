<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.common.collect.model.mapper.FlowLogMapper">

    <sql id="tb">
        `flow_log`
    </sql>

    <sql id="cols_all">
        `id`,
        `biz_id`,
        `biz_type`,
        `before_value`,
        `update_value`,
        `after_value`,
        `extra`,
        `operate_remark`,
        `operator_id`,
        `operator_name`,
        `create_at`,
        `update_at`
    </sql>

    <sql id="vals_all">
        #{item.id},
        #{item.bizId},
        #{item.bizType},
        #{item.bizTypeName},
        #{item.beforeValue},
        #{item.updateValue},
        #{item.afterValue},
        #{item.extra},
        #{item.operateRemark},
        #{item.operatorId},
        #{item.operatorName},
        <if test="item.createAt != null ">#{item.createAt},</if>
        <if test="item.createAt == null ">now(),</if>
        <if test="item.updateAt != null ">#{item.updateAt}</if>
        <if test="item.updateAt == null ">now()</if>
    </sql>

    <sql id="set_dynamic">
        <if test="item.id !=null">`id` = #{item.id},</if>
        <if test="item.bizId !=null">`biz_id` = #{item.bizId},</if>
        <if test="item.bizType !=null">`biz_type` = #{item.bizType},</if>
        <if test="item.beforeValue !=null">`before_value` = #{item.beforeValue},</if>
        <if test="item.updateValue !=null">`update_value` = #{item.updateValue},</if>
        <if test="item.afterValue !=null">`after_value` = #{item.afterValue},</if>
        <if test="item.extra !=null">`extra` = #{item.extra},</if>
        <if test="item.operateRemark !=null">`operate_remark` = #{item.operateRemark},</if>
        <if test="item.operatorId !=null">`operator_id` = #{item.operatorId},</if>
        <if test="item.operatorName !=null">`operator_name` = #{item.operatorName},</if>
        <if test="item.createAt !=null">`create_at` = #{item.createAt},</if>
        <if test="item.updateAt !=null">`update_at` = #{item.updateAt},</if>
    </sql>

    <insert id="create" parameterType="com.common.collect.model.flowlog.FlowLog" keyProperty="item.id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="cols_all"/>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="vals_all"/>
        </trim>
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_all"/>)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (<include refid="vals_all"/>)
        </foreach>
    </insert>

    <select id="load" parameterType="long" resultType="com.common.collect.model.flowlog.FlowLog">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="loads" resultType="com.common.collect.model.flowlog.FlowLog" parameterType="list">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="com.common.collect.model.flowlog.FlowLog">
        UPDATE
        <include refid="tb"/>
        <set>
            <include refid="set_dynamic"/>
        </set>
        WHERE id=#{item.id}
    </update>

</mapper>
